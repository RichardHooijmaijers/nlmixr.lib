[{"path":"https://nlmixr2.github.io/nlmixr2lib/articles/create-model-library.html","id":"model-library-conventions-within-nlmixr2lib","dir":"Articles","previous_headings":"","what":"Model library conventions within nlmixr2lib","title":"Creating a model library","text":"Compartment parameter names lower case use snakeCase combined way. Compartment parameter names selected align used rxode2::linCmt() described vignette: vignette(“rxode2-model-types”, package = “rxode2”).","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/articles/create-model-library.html","id":"compartment-naming","dir":"Articles","previous_headings":"Model library conventions within nlmixr2lib","what":"Compartment naming","title":"Creating a model library","text":"Compartment naming follows compartment names linCmt() augmentation compartments: depot: extravascular dosing compartment (example, gut oral dosing subcutaneous space subcutaneous dosing) central: intravascular compartment used intravenous dosing typical pharmacokinetic (PK) model samping drug peripheral1, peripheral2: first second peripheral compartments 2- 3-compartment PK models effect: compartment effect compartment models","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/articles/create-model-library.html","id":"parameter-naming","dir":"Articles","previous_headings":"Model library conventions within nlmixr2lib","what":"Parameter naming","title":"Creating a model library","text":"PK models use following parameter naming conventions: ka: absorption rate cl: clearance q: intercompartmental clearance (central peripheral1 compartments) q2: second intercompartmental clearance (central peripheral2 compartments) vc: central volume distribution vp, vp2: first second peripheral compartment volumes micro-constants used, use following naming conventions: kel elimination rate (cl/vc) k12, k21, k13, k31: intercompartmental transit rates (q/vc, q/vp, q2/vc, q2/vp2, respectively)","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/articles/create-model-library.html","id":"parameter-transforms","dir":"Articles","previous_headings":"Model library conventions within nlmixr2lib","what":"Parameter transforms","title":"Creating a model library","text":"Parameters often estimated transformed scale. instance, natural logarithm transform often used parameters must positive, logit transform often used parameter must remain within specific range. Transformed parameters prefixed indicator transformation. Preferred transformation prefixes : l (lower case L): natural log transform logit: logit transform probit: probit transform transform similarly include full transform prefix Generally, transform natural logarithm, include full name prefix. example, natural logarithm-transformed ka lka logit-transformed emax logitemax.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/articles/create-model-library.html","id":"random-effects","dir":"Articles","previous_headings":"Model library conventions within nlmixr2lib","what":"Random effects","title":"Creating a model library","text":"Random effects estimates part distribution varying grouping facter. grouping factor often subject clinical trial. (NONMEM users, random effects often referred inter-individual variability.) Random effect parameters prefix (transformed) parameter name eta. example, random effect log-transformed clearance named etalcl.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/articles/create-model-library.html","id":"model-files","dir":"Articles","previous_headings":"","what":"Model files","title":"Creating a model library","text":"Files model library following characteristics: first line inside function description assignment. description <- \"description   model\" right inside function() ini({}) block.* remainder file nlmixr2 model function typical ini() model() block. name file match name model within file. examples, see package installation directory.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Richard Hooijmaijers. Author, maintainer. Matthew Fidler. Author. Bill Denney. Author.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hooijmaijers R, Fidler M, Denney B (2022). nlmixr2lib: model library nlmixr2. https://github.com/nlmixr2/nlmixr2lib, https://nlmixr2.github.io/nlmixr2lib/.","code":"@Manual{,   title = {nlmixr2lib: A model library for nlmixr2},   author = {Richard Hooijmaijers and Matthew Fidler and Bill Denney},   year = {2022},   note = {https://github.com/nlmixr2/nlmixr2lib, https://nlmixr2.github.io/nlmixr2lib/}, }"},{"path":"https://nlmixr2.github.io/nlmixr2lib/index.html","id":"nlmixr2lib","dir":"","previous_headings":"","what":"A model library for nlmixr2","title":"A model library for nlmixr2","text":"early draft see model library can set nlmixr2 using separate R package. package currently contains one function modellib loads base models using ‘modellib.rds’, available ‘inst’ directory. ‘modellib.rds’ file saved version dataframe including meta data available models. running function without arguments, list available models. modelname given, function return vector model code. function can easily adapted return types well, e.g.: console: cat(modr,sep=\"\\n) file: writeLines(modr,paste0(model,\".r\")) directly evaluated: eval(parse(text=modr)) Rstudio’s current script: rstudioapi::insertText(paste(modr,\"\\n\")) Within function, parameters IIV type residual error can provided. case model extended using available pipe syntax. examples usage:","code":"modellib(model=\"PK_1cmt\") modellib(model=\"PK_1cmt\",iiv = c(\"ka\",\"v\"),reserr = \"add\") modellib(model=\"PK_1cmt\",reserr = \"add\")"},{"path":"https://nlmixr2.github.io/nlmixr2lib/index.html","id":"assumptions-and-remarks","dir":"","previous_headings":"","what":"Assumptions and remarks","title":"A model library for nlmixr2","text":"Please take account following evaluating package: package currently provides proof concept dataframe including meta data contains bare minimum, variables include considered (e.g. modeltype= PK,PD,PKPD,etc.) Added DV variable rds dataset, currently used residual error (coded cp~prop(prop.err) linCmt()~prop(prop.err)) Piping now used add IIV residual error. IIV parameters used/checked rds dataset. residual error, now default proportional error always assumed user can choose pre-defined options: add, prop, add+prop","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/index.html","id":"possible-extensions","dir":"","previous_headings":"","what":"Possible extensions","title":"A model library for nlmixr2","text":"modellib function set-way can easily extended used applications. possible extension implementation shiny app. app can created easily add new models model library database (curated?), directly make models available users. believe can added value base model library can easily extended community way.","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/addEta.html","id":null,"dir":"Reference","previous_headings":"","what":"Add random effects to a model — addEta","title":"Add random effects to a model — addEta","text":"Add random effects model","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/addEta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add random effects to a model — addEta","text":"","code":"addEta(model, eta)"},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/addEta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add random effects to a model — addEta","text":"model model function eta vector parameters add random effects (sometimes referred inter-individual variability, IIV) ","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/addEta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add random effects to a model — addEta","text":"model eta added requested parameters","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/addEta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add random effects to a model — addEta","text":"","code":"readModelDb(\"PK_1cmt\") %>% addEta(\"ka\") #> Loading required namespace: testthat #>   #>   #>   #> → Adding eta to lka instead of ka due to mu-referencing #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> ℹ promote `etalka` to between subject variability with initial estimate 0.1 #> ℹ change initial estimate of `etalka` to `0.1` #> function ()  #> { #>     description <- \"One compartment PK model with linear clearance\" #>     ini({ #>         lka <- 0.45 #>         label(\"Absorption rate (Ka)\") #>         lcl <- 1 #>         label(\"Clearance (CL)\") #>         lvc <- 3.45 #>         label(\"Central volume of distribution (V)\") #>         prop.err <- c(0, 0.5) #>         label(\"Proportional residual error (fraction)\") #>         etalka ~ 0.1 #>     }) #>     model({ #>         ka <- exp(lka + etalka) #>         cl <- exp(lcl) #>         vc <- exp(lvc) #>         linCmt() ~ prop(prop.err) #>     }) #> } #> <environment: 0x555a9ec801a8>"},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/addResErr.html","id":null,"dir":"Reference","previous_headings":"","what":"Add residual error to a model — addResErr","title":"Add residual error to a model — addResErr","text":"Add residual error model","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/addResErr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add residual error to a model — addResErr","text":"","code":"addResErr(model, reserr)"},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/addResErr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add residual error to a model — addResErr","text":"model model function reserr character type residual error (currently \"add\", \"prop\" \"add+prop\" accepted)","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/addResErr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add residual error to a model — addResErr","text":"model residual error modified","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/addResErr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add residual error to a model — addResErr","text":"","code":"readModelDb(\"PK_1cmt\") %>% addResErr(\"add\") #>   #> ! remove population parameter `prop.err` #> ℹ add residual parameter `add.err` and set estimate to 1 #> ℹ change initial estimate of `add.err` to `1` #> function ()  #> { #>     description <- \"One compartment PK model with linear clearance\" #>     ini({ #>         lka <- 0.45 #>         label(\"Absorption rate (Ka)\") #>         lcl <- 1 #>         label(\"Clearance (CL)\") #>         lvc <- 3.45 #>         label(\"Central volume of distribution (V)\") #>         add.err <- c(0, 1) #>     }) #>     model({ #>         ka <- exp(lka) #>         cl <- exp(lcl) #>         vc <- exp(lvc) #>         linCmt() ~ add(add.err) #>     }) #> } #> <environment: 0x555a9f457750>"},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/modeldb.html","id":null,"dir":"Reference","previous_headings":"","what":"Model library for nlmixr2 — modeldb","title":"Model library for nlmixr2 — modeldb","text":"data frame availble models nlmixr2lib, generated compile time","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/modeldb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model library for nlmixr2 — modeldb","text":"","code":"modeldb"},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/modeldb.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Model library for nlmixr2 — modeldb","text":"data frame XXX rows 5 columns name Model name can used extract model model library description Model description free text; model parameters comma separated string listing either parameter model defined population/individual effects population effect parameter DV definition dependent variable(s) filename Filename model.  default installed model library read demand","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/modellib.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the model from the model library — modellib","title":"Get the model from the model library — modellib","text":"function gets model available model library","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/modellib.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the model from the model library — modellib","text":"","code":"modellib(name = NULL, eta = NULL, reserr = NULL)"},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/modellib.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the model from the model library — modellib","text":"name character name model load (NULL, lists available base models) eta vector parameters add random effects (sometimes referred inter-individual variability, IIV) reserr character type residual error (currently \"add\", \"prop\" \"add+prop\" accepted)","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/modellib.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the model from the model library — modellib","text":"function returns function model code (NULL  model = NULL)","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/modellib.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the model from the model library — modellib","text":"first draft just look proof concept","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/modellib.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the model from the model library — modellib","text":"","code":"if (FALSE) {   modellib(name=\"PK_1cmt\")   modellib(name=\"PK_1cmt\", eta = c(\"ka\", \"vc\"), reserr = \"add\")   modellib(name=\"PK_1cmt\", reserr = \"add\") }"},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/nlmix2libMd5.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the MD5 hash of the model library — nlmix2libMd5","title":"Get the MD5 hash of the model library — nlmix2libMd5","text":"Get MD5 hash model library","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/nlmix2libMd5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the MD5 hash of the model library — nlmix2libMd5","text":"","code":"nlmix2libMd5()"},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/nlmix2libMd5.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the MD5 hash of the model library — nlmix2libMd5","text":"","code":"nlmix2libMd5() #> [1] \"40dfb6addebce889955bd8d20637c042\""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/readModelDb.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a model from the nlmixr2 model database — readModelDb","title":"Read a model from the nlmixr2 model database — readModelDb","text":"Read model nlmixr2 model database","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/readModelDb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a model from the nlmixr2 model database — readModelDb","text":"","code":"readModelDb(name)"},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/readModelDb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a model from the nlmixr2 model database — readModelDb","text":"name name model (must one modeldb$name)","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/readModelDb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a model from the nlmixr2 model database — readModelDb","text":"model function","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/readModelDb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a model from the nlmixr2 model database — readModelDb","text":"","code":"readModelDb(\"PK_1cmt\") #> function() { #>   description <- \"One compartment PK model with linear clearance\" #>   ini({ #>     lka <- 0.45 ; label(\"Absorption rate (Ka)\") #>     lcl <- 1 ; label(\"Clearance (CL)\") #>     lvc  <- 3.45 ; label(\"Central volume of distribution (V)\") #>     prop.err <- 0.5 ; label(\"Proportional residual error (fraction)\") #>   }) #>   model({ #>     ka <- exp(lka) #>     cl <- exp(lcl) #>     vc  <- exp(lvc) #>  #>     linCmt() ~ prop(prop.err) #>   }) #> } #> <environment: 0x555a9c28d140>"},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. rxode2 %>%","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/searchReplace.html","id":null,"dir":"Reference","previous_headings":"","what":"Search within a model to replace part of the model — searchReplace","title":"Search within a model to replace part of the model — searchReplace","text":"Search within model replace part model","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/searchReplace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search within a model to replace part of the model — searchReplace","text":"","code":"searchReplace(object, find, replace)  searchReplaceHelper(object, find, replace)"},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/searchReplace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search within a model to replace part of the model — searchReplace","text":"object Fitted object function specifying model. find, replace Character scalars parts model replace","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/searchReplace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search within a model to replace part of the model — searchReplace","text":"object find replaced replace","code":""},{"path":"https://nlmixr2.github.io/nlmixr2lib/reference/searchReplace.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Search within a model to replace part of the model — searchReplace","text":"searchReplaceHelper(): helper function searchReplace (intended users use directly)","code":""}]
